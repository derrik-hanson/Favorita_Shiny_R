View(data_train)
library(shiny); runApp('la_Futura_de_Favorita/app_navbar.R')
write.csv(fav_df, paste(base_path, "store-sales-time-series-forecasting/fav_main_df.csv", sep=""))
# Create Primary DataFrame ----------------------------------------------------
fav_df <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
write.csv(fav_df, paste(base_path, "store-sales-time-series-forecasting/fav_main_df.csv", sep=""))
write.csv(fav_df, paste(base_path, "store-sales-time-series-forecasting/fav_main_df.csv", sep=""))
data_main = read.csv(paste(base_path, "store-sales-time-series-forecasting/fav_main_df.csv", sep=""))
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
merge(data_train, by.x = "store_nbr", by.y = "store_nbr", all.y=TRUE) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_train = read.csv(paste(base_path, "store-sales-time-series-forecasting/train.csv", sep =""))
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
merge(data_train, by.x = "store_nbr", by.y = "store_nbr", all.y=TRUE) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
merge(data_train, by = "store_nbr", all.y=TRUE) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
merge(data_train, by = "store_nbr", all=TRUE) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
# merge(data_train, by = "store_nbr", all=TRUE) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
join(data_train, by = c("store_nbr" = "store_nbr")) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
join(data_train, by = c("store_nbr" = "store_nbr")) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
right_join(data_train, by = c("store_nbr" = "store_nbr")) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
data_product <- merge(x=data_transactions, y=data_stores,
by.x = "store_nbr", by.y = "store_nbr", x.all=TRUE) %>%
# incorporate product data -
right_join(data_train, by = c("store_nbr" = "store_nbr")) %>%
# incorporate holiday data -
merge(data_holiday_events, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(holiday_applies = if_else((locale == "National"), TRUE,
if_else((locale == "Regional") & (locale_name == state), TRUE,
if_else((locale == "Local") & (locale_name == city), TRUE, false=FALSE)))) %>%
# incorporate Oil Data -
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
# Add day of week -
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
# clean up names -
rename(store_type = type.x) %>%
rename(holiday_type = type.y)
View(data_holiday_events)
View(data_transactions)
View(data_train)
View(data_train)
View(data_train)
View(data_train)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
View(data_train)
unique(data_train$family)
clusters_use = c(13, 4, 10)
#- Selected Time Frame
start_date = "2016-01-01"
end_date = "2016-01-31"
#- Apply Parameters
select_clusters <- merge(x=data_transactions, y=data_stores, y.all=TRUE) %>%
filter(date >= as.POSIXct(start_date)) %>%
filter(date <= as.POSIXct(end_date)) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
filter(cluster %in%  clusters_use) %>%
group_by(cluster) %>%
group_by(date, .add=TRUE) %>%
summarise(total_trans = sum(transactions)) #%>%
View(select_clusters)
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales))
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA)
View(data_item_oil)
ggplot(data_item_oil,
aes(x=date, y=sales, group=family, color=family)
) +
geom_line()
ggplot(data_item_oil,
aes(x=date, y=total_sales, group=family, color=family)
) +
geom_line()
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA)
View(data_item_oil)
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date))
library(corrgram)
corrgram(data_item_oil, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Item Family and Oil Correlogram")
library(corrgram)
install.packages("corrgram")
library(corrgram)
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date))
ggplot(data_item_oil,
aes(x=date, y=total_sales, group=family, color=family)
) +
geom_line()
corrgram(data_item_oil, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Item Family and Oil Correlogram")
install.packages("Hmisc")
library(Hmisc)
library(dplyr)
rcorr(as.matrix(data_item_oil), type="pearson")
unique(data_items$fmaily)
unique(data_items$family)
data_item_oil2 <- knnImp(data_item_oil)
install.packages("performanceEstimation")
library(performanceEstimation)
data_item_oil2 <- knnImp(data_item_oil)
data_item_oil2 <- knnImp(data_item_oil$dcoilwtico)
rcorr(as.matrix(data_item_oil), type="pearson")
data_item_oil2 <- knnImp(data_item_oil$dcoilwtico)
data_item_oil2 <- fill(data_item_oil$dcoilwtico, .direction ="downup")
data_item_oil3 <- na.approx(data_item_oil$dcoilwtico)
library(zoo)
data_item_oil3 <- na.approx(data_item_oil$dcoilwtico)
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico))
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE))
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up")
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
rcorr(as.matrix(data_item_oil), type="pearson")
corrgram(data_item_oil, order=TRUE, lower.panel=panel.shade,
upper.panel=panel.pie, text.panel=panel.txt,
main="Item Family and Oil Correlogram")
cor(data_item_oil)
cor(select(data_item_oil, -date))
str(data_item_oil)
cor(select(data_item_oil, -date,-day_of_week))
rcorr(as.matrix(select(data_item_oil,-date,-day_of_week), type="pearson")
rcorr(as.matrix(select(data_item_oil,-date,-day_of_week)), type="pearson")
rcorr(as.matrix(select(data_item_oil,-date,-day_of_week)), type="pearson")
rcorr(as.matrix(select(data_item_oil,-date,-day_of_week)), type="pearson")
item_oil_cor <- cor(select(data_item_oil, -date,-day_of_week))
View(item_oil_cor)
class(item_oil_cor)
item_oil_cor$'LIQUOR,WINE,BEER'
item_oil_cor[,'LIQUOR,WINE,BEER']
order(item_oil_cor[,'LIQUOR,WINE,BEER'])
drinkin_and <- item_oil_cor[,'LIQUOR,WINE,BEER']
View(store_w_oil)
drinkin_and <- as.matrix(item_oil_cor[,'LIQUOR,WINE,BEER'])
View(drinkin_and)
quake_date = "2016-04-16"
pre_quake_train <- data_train %>%
filter(date < as.POSIXct(quake_date))
post_quake_train <- data_train %>%
filter(date > as.POSIXct(quake_date))
quake_day_train <- data_train %>%
filter(date > as.POSIXct(quake_date))
View(pre_quake_train)
pre_quake_train$"FROZEN FOOD"
pre_qk2 <- pre-quake_train %>% group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
pre_qk2 <- pre_quake_train %>% group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
pre_qk2 <- pre_quake_train %>%
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)
library(corrgram)
library(Hmisc)
library(performanceEstimation)
library(zoo)
pre_qk2 <- pre_quake_train %>%
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
pre_qk2$"FROZEN FOOD"
View(pre_qk2)
# -- analyse a single product family
pre_quake_ts <- ts(pre_qk2$"FROZEN FOOD", frequency=365, start = c(2013,1))
plot(pre_quake_ts)
pre_quake_ts <- ts(pre_qk2[[family_use]], frequency=365, start = c(2013,1))
family_use = "FROZEN FOOD"
family_use <-  "FROZEN FOOD"
pre_quake_ts <- ts(pre_qk2[[family_use]], frequency=365, start = c(2013,1))
pre_qk2[[family_use]]
pre_quake_ts <- ts(select(pre_qk2, family_use), frequency=365, start = c(2013,1))
family_use <-  "FROZEN FOODS"
pre_quake_ts <- ts(select(pre_qk2, family_use), frequency=365, start = c(2013,1))
plot(pre_quake_ts)
post_qk2 <-  post_quake_train %>%
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
View(post_qk2)
as.POSIXct("2016-04-17")-as.POSIXct("2016-01-01")
as.POSIXct("2016-01-01")-as.POSIXct("2016-01-01")
as.POSIXct("2016-01-02")-as.POSIXct("2016-01-01")
family_use <-  "FROZEN FOODS"
pre_quake_ts <- ts(select(pre_qk2, family_use), frequency=365, start = c(2013,1))
# as.POSIXct("2016-04-17")-as.POSIXct("2016-01-01")+1
post_quake_ts <- ts(select(post_qk2, family_use), frequency=365, start = c(2016,108))
plot(pre_quake_ts)
plot(pre_quake_ts, post_quake_ts)
plot(post_quake_ts)
knitr::opts_chunk$set(echo = TRUE)
compare.models(n=100)
knitr::opts_chunk$set(echo = TRUE)
library(IRdisplay)
library(magrittr)
library(tidyverse)
library(scales)
library(gridExtra)
library(forecast)
library(tseries)
library(ggthemes)
library(tinytex)
source("helper/compare_models.R")
source("helper/sim_random_walk.R")
source("helper/sim_stationary_ts.R")
compare.models(n=100)
random.walk <- sim.random.walk()
random.walk %>% ggplot(aes(t,X)) + geom_line() + xlab("T") + ylab("X") + ggtitle("Time Series Plot")
g1 <- ggAcf(random.walk$X,type="correlation") + ggtitle("Autocorrelation ACF Plot") # ACF
g2 <- ggAcf(random.walk$X,type="partial") + ggtitle("Partial Autocorrelation PACF Plot") # PACF
grid.arrange(g1,g2)
time_series_df = sim.stationary.example(n=1000)
head(time_series_df)
g1 <- ggplot(time_series_df,aes(x=t,y=X1)) + geom_line() + xlab("t") + ylab("X1") + ggtitle("Nonstationary")
g2 <- ggplot(time_series_df,aes(x=t,y=X3)) + geom_line() + xlab("t") + ylab("X3") + ggtitle("Stationary")
grid.arrange(g1,g2)
g1 <- ggAcf(time_series_df$X1, type="correlation") + ggtitle("X1 Non Stationary")
g2 <- ggAcf(time_series_df$X3, type="correlation") + ggtitle("X3 Stationary")
grid.arrange(g1,g2)
adf.test(time_series_df$X3)
adf.test(time_series_df$X1)
difference <- time_series_df$X1 - lag(time_series_df$X1, 1)
g1 <- ggAcf(time_series_df$X1, type="correlation")
g2 <- ggAcf(difference,type="correlation")
grid.arrange(g1,g2)
linear_model = lm(X2 ~ t, data = time_series_df)
detrended = resid(linear_model)
g1 <- ggAcf(time_series_df$X1, type="correlation")
g2 <- ggAcf(detrended,type="correlation")
grid.arrange(g1,g2)
drinkin_and <- as.matrix(item_oil_cor[,'LIQUOR,WINE,BEER'])
ggplot(data_item_oil,
aes(x=date, y=total_sales, group=family, color=family)
) +
geom_line()
data_item_oil <- data_train %>%
# all stores
group_by(family) %>%
group_by(date, .add=TRUE) %>%
summarise(total_sales = sum(sales)) %>%
spread(family, total_sales) %>%
merge(data_oil, by = "date", all.x=TRUE, incomparables=NA) %>%
mutate(date=as.Date(date, format="%Y-%m-%d")) %>%
mutate(day_of_week = weekdays(date)) %>%
mutate(oil_price=na.approx(dcoilwtico, na.rm=FALSE)) %>%
fill(oil_price, .direction="up") %>%
select(-dcoilwtico)
item_oil_cor <- cor(select(data_item_oil, -date,-day_of_week))
drinkin_and <- as.matrix(item_oil_cor[,'LIQUOR,WINE,BEER'])
ggplot(data_item_oil,
aes(x=date, y=total_sales, group=family, color=family)
) +
geom_line()
item_oil_cor <- cor(select(data_item_oil, -date,-day_of_week))
ggplot(data_item_oil,
aes(x=date, y=total_sales, group=family, color=family)
) +
geom_line()
View(data_item_oil)
View(drinkin_and)
